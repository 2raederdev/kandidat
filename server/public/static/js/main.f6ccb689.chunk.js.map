{"version":3,"sources":["service/Auth.service.js","components/pages/Index.js","service/Dashboard.service.js","components/applications/Application-card.js","components/applications/Application-form.js","components/dashboard/Statuscol.js","components/dashboard/Dashboard.js","service/Interview.service.js","components/company/Searchbar.js","components/company/Company.js","components/mails/Mails.js","components/agenda/Map.js","components/agenda/Map-oneInterview.js","components/agenda/Interview-details.js","components/agenda/Interview-edit.js","components/agenda/Interview-card.js","components/agenda/NewCalendar.js","components/agenda/Agenda.js","components/applications/Application-edit.js","components/agenda/Interview-form.js","components/applications/Application-details.js","components/ui/Navbar.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","_service","post","login","logout","loggedin","get","this","axios","create","baseURL","withCredentials","Index","Container","getAllApplications","getAllApplicationsCVSent","getAllApplicationsInterview","getAllApplicationsOffer","getAllApplicationsHired","getAllApplicationsRejected","getAllApplicationsNotInterested","createApplication","application","getOneApplication","id","deleteApplication","editApplication","company","position","status","link","ApplicationCard","props","state","_id","loggedInUser","Card","className","style","width","Body","Title","Subtitle","Link","as","href","to","color","cursor","onClick","delete","Component","ApplicationForm","handleSubmit","e","preventDefault","then","closeModalWindow","updateTheApplications","catch","err","console","log","handleInputChange","target","name","value","active","setState","Service","_authservice","AuthService","user","theStatus","Form","onSubmit","Group","Label","Control","type","onChange","Button","variant","StatusCol","handleShow","showModalWindow","handleClose","componentDidMount","updateApplicationsList","allApplicationsFromDB","withId","data","filter","applications","title","Row","map","key","Modal","show","onHide","Header","closeButton","React","Dashboard","marginLeft","marginRight","Col","lg","md","sm","getAllInterviews","_interviewService","createInterview","interview","deleteInterview","editInterview","address","contactPerson","date","time","additionalInfo","Searchbar","nameCompany","event","window","open","placeholder","onChangeName","bind","email","inputEmail","searchGoogle","Company","Mail","emailAddress","emailSubject","emailBody","onChangeMail","rows","sendMail","Geocode","setApiKey","Map","updateInterviewsList","allInterviewsFromDB","interviews","addressesCopy","addresses","forEach","elm","fromAddress","response","results","geometry","location","lat","lng","push","error","setInterview","selectedInterview","handleToggleOpen","isOpen","handleToggleClose","InterviewService","defaultZoom","defaultCenter","idx","icon","url","scaledSize","google","maps","Size","onCloseClick","WrappedMap","withScriptjs","withGoogleMap","InterviewDetails","initialized","details","dateShowed","substr","height","googleMapURL","process","loadingElement","containerElement","mapElement","EditInterview","x","updateCard","handle","edit","interviewAddress","selected","InterviewCard","handleEditShow","showEditModalWindow","handleEditClose","handleDelete","handleConfirmShow","showConfirmModalWindow","handleConfirmCloseAndDelete","showModalConfirmWindow","handleConfirmCloseWithoutDelete","span","offset","animation","update","Footer","handler","localizer","momentLocalizer","moment","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","MyCalendar","updateMyInterviewsList","myInterviewsList","start","end","marginTop","events","startAccessor","endAccessor","Agenda","NewCalendar","EditApplication","updateEdit","InterviewForm","closeModalInterviewWindow","interviewAdd","ApplicationDetail","handleInterviewShow","showModalInterviewForm","handleInterviewClose","applicationId","match","params","theApplication","button","uno","Navigation","logoutUser","setUser","Navbar","expand","Toggle","aria-controls","Collapse","Nav","SignupForm","theNewUser","history","message","handleCheckboxChange","showPassword","inputType","controlId","Check","label","LoginForm","theLoggedUser","handleToastOpen","handleToastClose","showToast","toastText","text","Toast","onClose","delay","autohide","right","bottom","minWidth","App","setTheUser","fetchUser","theLoggedInUserFromTheServer","exact","path","component","render","Signup","Login","buttonText","cookieName","background","buttonStyle","acceptButton","expires","debug","containerClasses","acceptOnScroll","acceptOnScrollPercentage","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6ccb689.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: 'http://localhost:5000/auth',\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    signup = (username, password) => this._service.post('/signup', { username, password })\n    login = (username, password) => this._service.post('/login', { username, password })\n    logout = () => this._service.post('/logout')\n    loggedin = () => this._service.get('/loggedin')\n}","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nconst Index = () => {\n\n    return (\n        <Container>\n            <section>\n                <h1>Kandidat</h1>\n                <p>Todas tus candidaturas en un único lugar.</p>\n            </section>\n        </Container>\n    )\n}\n\nexport default Index","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: `http://localhost:5000/api/dashboard`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    getAllApplications = () => this._service.get('/dashboard')\n\n    getAllApplicationsCVSent = () => this._service.get('/dashboardcvsent')\n\n    getAllApplicationsInterview = () => this._service.get(`/dashboardinterview`)\n\n    getAllApplicationsOffer = () => this._service.get(`/dashboardoffer`)\n\n    getAllApplicationsHired = () => this._service.get(`/dashboardhired`)\n\n    getAllApplicationsRejected = () => this._service.get(`/dashboardrejected`)\n\n    getAllApplicationsNotInterested = () => this._service.get(`/dashboardnotinterested`)\n    \n    createApplication = application => this._service.post('/new', application)\n\n    getOneApplication = id => this._service.get(`/application/${id}`)\n\n    // deleteOneApplication = id => this._service.get(`/application/${id}`)\n\n    deleteApplication = id => this._service.get(`/delete/${id}`)\n\n    editApplication = ( id, { company, position, status, link } ) => this._service.post(`/application/${id}`, {company, position, status, link})\n\n}\n","import React, { Component } from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\nimport './Application.css'\n\n// const ApplicationCard = ({_id, position, company }) => {\n\nclass ApplicationCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            application: {\n                id:props._id,\n                company: props.company,\n                position: props.position,\n                link: props.link,\n                status: props.status           \n            },\n            loggedInUser: props.loggedInUser,\n        }\n    }\n\n    render(){\n\n\n\n        let borrar = {\n            color: \"#CACAEA\",\n            cursor: \"pointer\"\n        }\n   \n\n    return (\n        <>\n        <Card className=\"applicationCard\" style={{ width: '11rem' }}>\n            <Card.Body>\n\n                <Card.Title>{this.state.application.position}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">{this.state.application.company} </Card.Subtitle>\n\n                <Card.Link \n                    as=\"li\"\n                    loggedInUser={this.state.loggedInUser} \n                    className=\"detallesLink\" \n                    href={`/application/${this.state.application.id}`}>\n                    <Link                      \n                        className=\"detallesLink\" \n                        loggedInUser={this.state.loggedInUser} \n                        to={`/application/${this.state.application.id}`}>\n                        Detalles\n                    </Link>\n                </Card.Link>                \n                <Card.Link style={borrar} className=\"borrar\" onClick={() => \n                    this.props.delete(this.state.application.id)\n                    } >Borrar</Card.Link>                \n\n\n            </Card.Body>\n        </Card>\n    \n    </>\n    )\n}\n}\n    \nexport default ApplicationCard","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n\nimport Service from '../../service/Dashboard.service'\nimport AuthService from '../../service/Auth.service'\n\nclass ApplicationForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._authservice = new AuthService()\n        this.state = {\n            application: {\n                user: props.loggedInUser,\n                company: \"\",\n                position: \"\",\n                link: \"\",\n                active: \"\",\n                status: props.theStatus           }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this._service.createApplication(this.state.application)\n            .then(() => {\n                this.props.closeModalWindow()\n                this.props.updateTheApplications()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.state.application.active = true\n        this.setState({\n            application: { ...this.state.application, [name]: value },\n        })\n    }\n\n    render() {\n\n        \n        return (\n            // this.props.closeModalWindow() ? <Redirect to=\"/dashboard\"/> : null\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa</Form.Label>\n                    <Form.Control type=\"text\" name=\"company\" onChange={this.handleInputChange} value={this.state.company} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición</Form.Label>\n                    <Form.Control type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.position} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Link a la oferta</Form.Label>\n                    <Form.Control type=\"text\" name=\"link\" onChange={this.handleInputChange} value={this.state.link} />\n                </Form.Group>\n                <Form.Group>\n                {/* <Form.Label>Estado</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"status\" onChange={this.handleInputChange} selected={this.state.status}>\n                    <option value=\"CV Sent\">CV Sent</option>\n                    <option value=\"Interview\">Interview</option>\n                    <option value=\"Offer\">Offer</option>\n                    <option value=\"Hired\">Hired</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"Not interested\">Not interested</option>\n                </Form.Control> */}\n                </Form.Group>\n               \n                <Button variant=\"danger\" type=\"submit\">Crear candidatura</Button>\n\n            </Form>\n        )\n    }\n}\n\nexport default ApplicationForm","import React from 'react'\n\nimport Service from '../../service/Dashboard.service'\n\nimport ApplicationCard from '../applications/Application-card'\nimport ApplicationForm from '../applications/Application-form'\n\n\nimport { Row, Modal, Button } from 'react-bootstrap'\n\n\nimport './Dashboard.css';\n\nclass StatusCol extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showModalWindow: false,\n            applications: [],\n            loggedInUser: props.loggedInUser._id\n\n        }\n    }\n\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => {\n        console.log(\"Entra la función hadleClose\")\n    this.setState({ showModalWindow: false })\n    }\n\n\n    componentDidMount = () => {\n        this.updateApplicationsList()\n    }\n\n    deleteApplication = id => {\n\n        this._service.deleteApplication(id)\n        this.updateApplicationsList()\n    }\n\n    updateApplicationsList = () => {\n\n        if (this.props.className === \"CV Sent\") {\n            this._service.getAllApplicationsCVSent()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Interview\") {\n            this._service.getAllApplicationsInterview()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        }   else if (this.props.className === \"Offer\") {\n            this._service.getAllApplicationsOffer()\n                .then(allApplicationsFromDB => { \n\n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Hired\") {\n            this._service.getAllApplicationsHired()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Rejected\") {\n            this._service.getAllApplicationsRejected()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Not interested\") {\n            this._service.getAllApplicationsNotInterested()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } \n    }\n\n\n    render() {\n        return (\n            <>\n        <section>\n\n            <p>{this.props.title}</p>\n            <Button variant=\"danger\" onClick={this.handleShow}>Nueva candidatura</Button>\n            <Row className={this.props.className}>\n            {this.state.applications.map(application => <ApplicationCard delete={this.deleteApplication} key={application._id} {...application} />)}\n            </Row>  \n\n\n\n\n\n            </section>\n            \n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Nueva candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ApplicationForm loggedInUser={this.state.loggedInUser} theStatus={this.props.className} closeModalWindow={this.handleClose} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal>\n\n            </>\n        )\n    }\n}\n    \nexport default StatusCol\n\n","import React from 'react'\nimport Service from '../../service/Dashboard.service'\n\nimport { Container, Col, Row, Button, Modal } from 'react-bootstrap'\n\nimport StatusCol from './Statuscol'\nimport ApplicationForm from '../applications/Application-form'\n\nimport './Dashboard.css';\n\n\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            applications: [],\n            showModalWindow: false,\n            loggedInUser: props.loggedInUser\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => {\n        console.log(\"Entra la función hadleClose\")\n    this.setState({ showModalWindow: false })\n    }\n  \n    render() {\n\n    \n\n        return (\n\n            <>\n\n\n            <section>\n                {/* {false ? \"es true\" : <p>no es true\"</p>} */}\n\n                <Container style={{ marginLeft: 20, marginRight: 20 }}>\n\n                    {/* <Button className=\"navBar\" variant=\"danger\" onClick={this.handleShow}>Nueva candidatura</Button> */}\n\n\n                    <h1>Hola {this.state.loggedInUser.username}!!! Éste es tu dashboard!!!</h1>\n\n                    <Row style={{ marginLeft: 20, marginRight: 20 }}>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"CV Sent\" title=\"CV Sent\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}}lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Interview\" title=\"Interview\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Offer\" title=\"Offer\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Hired\" title=\"Hired\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Rejected\" title=\"Rejected\" />\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Not interested\" title=\"No interest\" />\n                        </Col>\n                        \n                    </Row>\n \n                </Container>\n\n            </section>\n\n            {/* <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Nueva candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ApplicationForm closeModalWindow={this.handleClose} loggedInUser={this.state.loggedInUser} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal> */}\n\n        </>\n\n        )\n    }\n}\n\nexport default Dashboard","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._interviewService = axios.create({\n            baseURL: `http://localhost:5000/api/interviews`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    getAllInterviews = () => this._interviewService.get('/interviewslist')\n   \n    createInterview = interview => this._interviewService.post('/newInterview', interview)\n\n    deleteInterview = id => this._interviewService.get(`/delete/${id}`)\n\n    editInterview = ( id, { company, position, type, address, contactPerson, date, time, additionalInfo } ) => this._interviewService.post(`/edit/${id}`, {company, position, type, address, contactPerson, date, time, additionalInfo})\n\n}","\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport { Container, Form, Button } from 'react-bootstrap'\n\n// import Button from './sendMail'\n\n\nclass Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        nameCompany: '',\n        }\n    }\n\n    onChangeName(event) {\n        this.setState({\n            nameCompany:event.target.value\n        });\n\n    }\n\n    searchGoogle(){\n      window.open(\"//\" + \"google.com/search?q=\" + this.state.nameCompany, '_blank')\n\n    }\n\n    render() {\n\n      return (\n\n        <Form>\n\n        <Form.Group>\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control placeholder=\"Por ejemplo: Ironhack\" type=\"text\" onChange={this.onChangeName.bind(this)}/>\n        </Form.Group>\n\n        <Button target=\"_blank\" email={this.state.inputEmail} onClick={this.searchGoogle.bind(this)}>Buscar empresa</Button>\n        \n        </Form>\n\n\n  );\n}\n}\n\nexport default Searchbar;","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport Searchbar from './Searchbar'\n\n\nconst Company = () => {\n\n    return (\n        <Container>\n            <section>\n                <h1>Empresa</h1>\n                <p>Busca toda la info de una empresa</p>\n\n                <Searchbar />\n\n            </section>\n        </Container>\n    )\n}\n\nexport default Company","\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport { Container, Form, Button } from 'react-bootstrap'\n\n// import Button from './sendMail'\n\n\nclass Mail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        emailAddress: '',\n        emailSubject: '',\n        emailBody: ''\n        }\n    }\n\n    onChangeMail(e) {\n        let { name, value } = e.target\n        this.setState({\n            [name]: value\n        });\n    }\n\n    sendMail(){\n        window.open(`mailto:${this.state.emailAddress}?subject=${this.state.emailSubject}&body=${this.state.emailBody}`)\n    }\n\n    render() {\n\n        return (\n\n            <>\n            <Container>\n                <section>\n                    <h1>Mails</h1>\n                    <p>Comprueba si un email existe</p>\n\n                    <Form>\n\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control placeholder=\"Introduce la dirección de correo electrónico\" type=\"text\" name=\"emailAddress\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Asunto</Form.Label>\n                            <Form.Control placeholder=\"Introduce el asunto de tu correo\" type=\"text\" name=\"emailSubject\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Texto del mensaje</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Escribe tu correo\" type=\"text\" name=\"emailBody\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n\n\n                        <Button target=\"_blank\" email={this.state.inputEmail} onClick={this.sendMail.bind(this)}>Enviar mail</Button>\n                    </Form>\n                </section>\n            </Container>\n\n            </>\n\n    \n        )\n    }\n}\n\nexport default Mail","/*global google*/\n\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\"\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyC0Hl0lxEoQa6Oy0mdrsk5eu4LZjGX4szU\");\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this._interviewService = new InterviewService();\n    this.state = {\n      interviews: [],\n      address: \"\",\n      addresses: [],\n      isOpen: false,\n      selectedInterview: null,\n      loggedInUser: props.loggedInUser._id,\n    };\n  }\n\n  componentDidMount = () => this.updateInterviewsList()\n\n  updateInterviewsList = () => {\n\n  this._interviewService.getAllInterviews()\n      .then(allInterviewsFromDB => {\n        \n        let withId = \n                    allInterviewsFromDB.data.filter(interview => interview.user  === this.state.loggedInUser\n                        )\n        \n        \n        this.setState({ interviews: withId})\n      const addressesCopy = [...this.state.addresses];\n      console.log(this.state.loggedInUser._id)\n      this.state.interviews.forEach(elm => {\n        Geocode.fromAddress(elm.address)\n          .then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location;\n              addressesCopy.push({ lat, lng });\n              this.setState({\n                address: { lat, lng },\n                addresses: addressesCopy\n              });\n            },\n            error => console.error(error)            \n          )\n          .catch(err => console.log(err));\n      }); \n  })\n    .catch(err => console.log(\"Error\", err));\n  }\n\n  setInterview = interview => this.setState ({ selectedInterview: interview })\n\n  handleToggleOpen = () => this.setState({ isOpen: true }) \n\n  handleToggleClose = () => this.setState({ isOpen: false })\n\n\n  render() {\n\n    return (\n\n        <GoogleMap\n        defaultZoom={10}\n        defaultCenter={{ lat: 40.4165, lng: -3.70256 }}\n      >\n\n        {this.state.addresses.map((elm, idx) => (\n          <>\n            <Marker\n              key={idx}\n              position={elm}\n              onClick={() => {\n                this.setInterview(elm)\n                //  this.handleToggleOpen(elm)\n                }}\n                icon={{\n                  url: \"https://res.cloudinary.com/tworaederdev/image/upload/v1576434174/qandidat/kandidatmarker_rvply5.png\",\n                  scaledSize: new google.maps.Size(31, 43)\n                }}\n            ></Marker>\n          </>\n        ))}\n        {this.state.selectedInterview && (\n          <InfoWindow \n            position={this.state.selectedInterview}\n            onCloseClick = {() => { \n              {this.setInterview(null)}\n          \n          }}\n          >\n            <>\n              <h4>Aquí tienes una entrevista.</h4>\n              <p>Busca en la lista para saber más</p>          \n          </>\n          </InfoWindow>\n        )} \n\n\n      </GoogleMap>\n\n    );\n  }\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\n\nexport default WrappedMap;","/*global google*/\n\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\"\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyC0Hl0lxEoQa6Oy0mdrsk5eu4LZjGX4szU\");\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this._interviewService = new InterviewService();\n    this.state = {\n      interview: props.interview,\n      address: \"\",\n      isOpen: false,\n    };\n  }\n\n  componentDidMount = () => this.updateInterviewsList()\n\n  updateInterviewsList = () => {\n\n        Geocode.fromAddress(this.state.interview.address)\n          .then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location;\n              this.setState({\n                address: { lat, lng },\n              });\n            },\n            error => console.error(error)            \n          )\n          .catch(err => console.log(err));\n  }\n\n\n  handleToggleOpen = () => this.setState({ isOpen: true })\n\n  handleToggleClose = () => this.setState({ isOpen: false })\n\n\n  render() {\n\n    return (\n        <GoogleMap defaultZoom={10} defaultCenter={{ lat: 40.4165, lng: -3.70256 }}>\n        <Marker \n            position={this.state.address}\n            icon={{\n                url: \"https://res.cloudinary.com/tworaederdev/image/upload/v1576434174/qandidat/kandidatmarker_rvply5.png\",\n                scaledSize: new google.maps.Size(31, 43)\n            }}\n        ></Marker>\n        </GoogleMap>\n    )\n  }\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default WrappedMap;","import React, { Component } from 'react'\n\nimport { Container, Col, Row } from 'react-bootstrap'\n\nimport WrappedMap from \"./Map-oneInterview\";\n\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n  } from \"react-google-maps\"\n\nimport Service from '../../service/Dashboard.service'\n\nclass InterviewDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            interview: props.details,\n        }\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.closeModalWindow()\n    }  \n    \n    componentDidMount = () => this.setState({ initialized: true})\n\n    render() {\n\n        let dateShowed \n\n        dateShowed = this.state.interview.date ? this.state.interview.date.substr(0,10) : null\n\n\n        return (     \n            \n            <Container onSubmit={this.handleSubmit}>\n\n                <Row>\n\n                    <Col md={6}>\n                        <h1 className=\"mb-2 text-muted\">Empresa: {this.state.interview.company}</h1>            \n                        <h2 className=\"mb-2 text-muted\">Posición: {this.state.interview.position} </h2>            \n                        <p className=\"mb-2 text-muted\">Tipo de entrevista:{this.state.interview.type} </p>            \n                        <p className=\"mb-2 text-muted\">Dirección: {this.state.interview.address} </p>            \n                        <p className=\"mb-2 text-muted\">Persona de contacto: {this.state.interview.contactPerson} </p>            \n                        <p className=\"mb-2 text-muted\">Fecha: {dateShowed} </p>            \n                        <p className=\"mb-2 text-muted\">Hora: {this.state.interview.time} </p>            \n                        <p className=\"mb-2 text-muted\">Información adicional: {this.state.interview.additionalInfo} </p>            \n                    </Col>  \n\n                    <Col md={6}>\n                        <div style={{ width: \"100%\", height: \"50vh\" }}>\n                            <WrappedMap\n                            interview={this.state.interview}\n                            \n                            googleMapURL=\n                            {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`}\n                            loadingElement={<div style={{ height: \"120%\" }} />}\n                            containerElement={<div style={{ height: \"100%\" }} />}\n                            mapElement={<div style={{ height: \"100%\" }} />}\n                            />\n                        </div>\n                    </Col>\n\n                </Row>\n\n            </Container>\n\n        )\n        }\n}\n\n\n\nexport default InterviewDetails","import React, { Component } from 'react'\nimport InterviewService from '../../service/Interview.service'\nimport { Button, Form } from 'react-bootstrap'\n\nclass EditInterview extends Component {\n\n    constructor(props) {\n        super(props)\n        this._interviewService = new InterviewService()\n        this.state = { \n            interview: {\n                id: this.props.edit.id,\n                company: this.props.edit.company,\n                position: this.props.edit.position,\n                type: this.props.edit.type,\n                address: this.props.edit.address,\n                contactPerson: this.props.edit.contactPerson,\n                date: this.props.edit.date,\n                time: this.props.edit.time,\n                additionalInfo: this.props.edit.additionalInfo\n            }\n        }\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            interview: { ...this.state.interview, [name]: value },\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const id = this.state.interview.id\n        const interview = this.state.interview\n        this._interviewService.editInterview(id, interview)\n            .then( x=> {\n                console.log(this.props.updateCard)\n                this.props.updateCard()\n                this.props.closeModalWindow()\n                this.props.handle()  \n\n            })\n            .catch(err => console.log(err))\n    }\n\n   \n    render() {\n\n        let interviewAddress\n\n        if(this.state.interview.type === \"Presencial\") {\n            \n            interviewAddress = \n            <Form.Group>\n                <Form.Label>Dirección</Form.Label>\n                <Form.Control type=\"text\" name=\"address\" onChange={this.handleInputChange} value={this.state.interview.address} />\n            </Form.Group>\n        }\n\n        return (\n\n            <>\n\n<Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa: {this.state.interview.company}</Form.Label>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición: {this.state.interview.position}</Form.Label>\n               </Form.Group>\n                <Form.Group>\n                <Form.Label>Tipo de entrevista</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"type\" onChange={this.handleInputChange} selected={this.state.interview.type}>\n                    <option value=\"Telefónica\">Telefónica</option>\n                    <option value=\"Vídeo\">Vídeo</option>\n                    <option value=\"Presencial\">Presencial</option>\n                    <option value=\"Coding Challenge\">Coding Challenge</option>\n                </Form.Control>\n                </Form.Group>\n                {interviewAddress}\n                <Form.Group>\n                    <Form.Label>Persona de contacto</Form.Label>\n                    <Form.Control type=\"text\" name=\"contactPerson\" onChange={this.handleInputChange} value={this.state.interview.contactPerson} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Fecha</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\" onChange={this.handleInputChange} value={this.state.interview.date} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Hora</Form.Label>\n                    <Form.Control type=\"time\" name=\"time\" onChange={this.handleInputChange} value={this.state.interview.time} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Información adicional</Form.Label>\n                    <Form.Control type=\"text\" name=\"additionalInfo\" onChange={this.handleInputChange} value={this.state.interview.additionalInfo} />\n                </Form.Group>\n\n                <Button variant=\"danger\" type=\"submit\" onClick={this.handleSubmit}>Guarda los cambios</Button>\n                <Button onClick={this.props.closeModalWindow}>Cerrar</Button>\n\n\n                </Form>\n               \n            </>\n\n        )\n    \n    }\n}\n\nexport default EditInterview","\nimport React, { Component } from 'react'\n\nimport { Card,Button, Modal, Container, Row, Col } from 'react-bootstrap'\n\nimport InterviewDetails from './Interview-details'\nimport EditInterview from './Interview-edit'\n\n\nclass InterviewCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            interview: {\n                id:props.interview._id,\n                company: props.interview.company,\n                position: props.interview.position,\n                type: props.interview.type,\n                address: props.interview.address,\n                contactPerson: props.interview.contactPerson,\n                date: props.interview.date,\n                time: props.interview.time,\n                additionalInfo: props.interview.additionalInfo  \n          }, \n            showModalWindow: false,\n            showEditModalWindow: false,\n            showConfirmModalWindow: false\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n\n    handleClose = () => this.setState({ showModalWindow: false })\n    \n    handleEditShow = () => this.setState({ showEditModalWindow: true, showModalWindow:false })\n\n    handleEditClose = () => this.setState({ showEditModalWindow: false, showModalWindow:false })\n\n    handleDelete = () => this.props.delete(this.state.interview.id)\n\n    handleConfirmShow = () => this.setState({ showConfirmModalWindow: true })\n\n    handleConfirmCloseAndDelete = () => {\n        this.setState({ showModalConfirmWindow: false })\n        this.handleDelete()\n    }\n\n    handleConfirmCloseWithoutDelete = () => this.setState({ showConfirmModalWindow: false })\n\n    // updateCard = () => this.props.update\n\n\n    render(){\n\n    return (\n        <>\n\n        <Container>\n            <Row>\n                <Col md={6}>\n                    <Card style={{ width: '15rem' }}>\n                        <Card.Body>\n\n                            <Card.Title>Entrevista</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Empresa: {this.state.interview.company} </Card.Subtitle>            \n                            <Card.Subtitle className=\"mb-2 text-muted\">Posición: {this.state.interview.position} </Card.Subtitle>                     \n\n                        </Card.Body>\n\n                        <Button variant=\"danger\" onClick={this.handleShow} >\n                            Ver detalles\n                        </Button>\n\n\n                        <Button variant=\"light\" onClick={this.handleConfirmShow}>\n                            Borrar entrevista\n                        </Button>\n\n                    </Card>\n                </Col>\n                <Col md={{ span: 4, offset: 2 }}>\n                    {/* Aquí irá el mapa */}\n                        </Col>\n            </Row>\n        </Container>\n\n       \n        <Modal show={this.state.showModalWindow} onHide={this.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Detalles</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InterviewDetails update={this.update} details={this.props.interview}  closeModalWindow={this.handleClose}/>\n            </Modal.Body>\n            <Modal.Footer>\n                    <Button onClick={this.handleEditShow}>Editar</Button>\n                    <Button onClick={this.handleClose}>Cerrar</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showEditModalWindow} onHide={this.handleEditClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Editar</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EditInterview handler = {this.handleConfirmCloseAndDelete} updateCard={this.props.update} edit={this.state.interview} details={this.state.interview}  closeModalWindow={this.handleEditClose}/>\n            </Modal.Body>\n        </Modal>\n\n        <Modal show={this.state.showConfirmModalWindow} onHide={this.handleConfirmCloseWithoutDelete}>\n            <Modal.Header closeButton>\n                <Modal.Title>¿Estás seguro de querer eliminar esta entrevista?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Button onClick={this.handleConfirmCloseAndDelete}>Sí</Button>\n                <Button onClick={this.handleConfirmCloseWithoutDelete}>No</Button>\n            </Modal.Body>\n        </Modal>\n\n\n    \n    </>\n    )\n}\n}\n    \nexport default InterviewCard","import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n  \nconst localizer = momentLocalizer(moment);\n\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nlet yyyy = today.getFullYear();\n\ntoday = yyyy + '-' + mm + '-' + dd;\n\nclass MyCalendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myInterviewsList: [{\n                title: 'Today',\n                start: new Date(`${today} 10:22:00`),\n                end: new Date(`${today} 10:42:00`)\n              },{\n              title: 'Tomorrow',\n              start: new Date(`2019-12-23 10:22:00`),\n              end: new Date(`2019-12-23 10:42:00`)}],\n            interviews: this.props.interview,\n            loggedInUser: this.props.loggedInUser,\n\n        }\n    }\n\n  updateMyInterviewsList = () => {\n\n    let newList = this.props.interview.map(elm => `${elm.date}`)\n\n  }\n\nrender() {\n\n    return (\n      <div\n      // style={{ height: \"75vh\", marginTop: \"25px\" }}\n      style={{ height: \"700px\", marginTop: \"25px\" }}\n      className=\"calendar-container\"\n      >\n                  <Calendar\n                    localizer={localizer}\n                    events={this.state.myInterviewsList}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    />\n    {this.props.interview.map(elm => `${elm.date}`)}\n                </div>\n    )\n  }\n}\n\nexport default MyCalendar;\n","import React from 'react'\n\nimport Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\n\nimport WrappedMap from \"./Map\";\n\nimport InterviewCard from './Interview-card'\n// import Calendar from './Calendar'\nimport NewCalendar from './NewCalendar'\n// import Calendar2 from 'react-calendar'\n\nimport './calendar.css'\n\n\n\nimport { Col, Row } from 'react-bootstrap'\n\nclass Agenda extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = {\n            showModalWindow: false,\n            interviews: [],\n            initialized: false,\n            loggedInUser: props.loggedInUser\n            \n        }\n    }\n    \n    \n    \n    componentDidMount = () => {\n        this.updateInterviewsList()\n        this.setState({ initialized: true})\n    }\n\n    deleteInterview = id => {\n\n        this._interviewService.deleteInterview(id)\n        this.updateInterviewsList()\n    }\n\n\n    updateInterviewsList = () => {\n            this._interviewService.getAllInterviews()\n                .then(allInterviewsFromDB => { \n                    \n                    \n                     let withId = \n                    allInterviewsFromDB.data.filter(interview => interview.user  === this.state.loggedInUser._id\n                        )\n                        \n                        this.setState({ interviews: withId})\n                })\n                .catch(err => console.log(\"Error\", err))     \n    }\n\n\n    render() {\n\n        let theUser = this.state.interviews.user\n\n        return (\n            <>\n        <section>\n\n            {/* <Row>\n                <Calendar />\n                 <Calendar2/>\n            </Row> */}\n\n            <Row>\n                <Col md={6}>\n                {this.state.interviews.map(interview => <InterviewCard update={this.updateInterviewsList} delete={this.deleteInterview} key={interview._id} interview={interview} />)}\n                </Col>  \n\n                <Col md={6}>\n                <div style={{ width: \"100%\", height: \"85vh\" }}>\n                    {this.state.initialized && (\n                    <WrappedMap\n                    loggedInUser={this.state.loggedInUser}\n                    interview={this.state.interviews}\n                    googleMapURL=\n                    {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`}\n                    loadingElement={<div style={{ height: \"100%\" }} />}\n                    containerElement={<div style={{ height: \"100%\" }} />}\n                    mapElement={<div style={{ height: \"100%\" }} />}\n                    />)}\n                </div>\n                </Col>\n            </Row>\n\n            <Row>       \n                             \n                <NewCalendar className=\"calendar\" loggedInUser={this.state.loggedInUser} interview={this.state.interviews}/>\n            </Row>\n            \n\n        </section>\n\n            </>\n        )\n    }\n}\n\n    \nexport default Agenda","import React, { Component } from 'react'\nimport Service from '../../service/Dashboard.service'\nimport { Button, Form } from 'react-bootstrap'\n\nclass EditApplication extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = { \n            application: {\n                company: this.props.edit.company,\n                position: this.props.edit.position,\n                status: this.props.edit.status,\n                link: this.props.edit.link,\n                id: this.props.edit._id\n            }\n        }\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            application: { ...this.state.application, [name]: value },\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const id = this.state.application.id\n        const application = this.state.application\n\n        console.log(this.state.application)\n        this._service.editApplication(id, application)\n            .then( x=> {\n                this.props.closeModalWindow()\n                this.props.updateEdit(x.data)\n            })\n            .catch(err => console.log(err))\n    }\n\n   \n    render() {\n        return (\n\n            <>\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa</Form.Label>\n                    <Form.Control type=\"text\" name=\"company\" onChange={this.handleInputChange} value={this.state.application.company} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición</Form.Label>\n                    <Form.Control type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.application.position} />\n                </Form.Group>\n                <Form.Group>\n                <Form.Label>Estado</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"status\" onChange={this.handleInputChange} selected={this.state.status}>\n                    <option value=\"CV Sent\">CV Sent</option>\n                    <option value=\"Interview\">Interview</option>\n                    <option value=\"Offer\">Offer</option>\n                    <option value=\"Hired\">Hired</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"Not interested\">Not interested</option>\n                </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Link a la oferta</Form.Label>\n                    <Form.Control type=\"text\" name=\"link\" onChange={this.handleInputChange} value={this.state.application.link} />\n                </Form.Group>\n               \n                <Button variant=\"danger\" type=\"submit\">Guarda los cambios</Button>\n\n            </Form>\n\n            </>\n\n        )\n    }\n\n}\n\nexport default EditApplication","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n\n// import Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\n\nclass InterviewForm extends Component {\n\n    constructor(props) {\n        super(props)\n        // this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = {\n            interview: {\n                user: props.interviewAdd.user,\n                company: props.interviewAdd.company,\n                position: props.interviewAdd.position,\n                application: props.interviewAdd._id,\n                type: \"Telefónica\",\n                address: \"\",\n                contactPerson: \"\",\n                date: \"\",\n                time: \"\",\n                additionalInfo: \"\"           \n            }\n\n        }\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state.interview)\n        this._interviewService.createInterview(this.state.interview)\n            .then(() => { \n                console.log(\"soy la respuesta del back\")\n                this.props.closeModalInterviewWindow()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            interview: { ...this.state.interview, [name]: value },\n        })\n    }\n\n    render() {\n\n        let interviewAddress\n\n        if(this.state.interview.type === \"Presencial\") {\n            \n            interviewAddress = \n            <Form.Group>\n                <Form.Label>Dirección</Form.Label>\n                <Form.Control type=\"text\" name=\"address\" onChange={this.handleInputChange} value={this.state.interview.address} />\n            </Form.Group>\n        }\n\n\n        return (\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa: {this.state.interview.company}</Form.Label>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición: {this.state.interview.position}</Form.Label>\n               </Form.Group>\n                <Form.Group>\n                <Form.Label>Tipo de entrevista</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"type\" onChange={this.handleInputChange} selected={this.state.interview.type}>\n                    <option value=\"Telefónica\" >Selecciona una opción</option>\n                    <option value=\"Telefónica\">Telefónica</option>\n                    <option value=\"Vídeo\">Vídeo</option>\n                    <option value=\"Presencial\">Presencial</option>\n                    <option value=\"Coding Challenge\">Coding Challenge</option>\n                </Form.Control>\n                </Form.Group>\n                {interviewAddress}\n                <Form.Group>\n                    <Form.Label>Persona de contacto</Form.Label>\n                    <Form.Control type=\"text\" name=\"contactPerson\" onChange={this.handleInputChange} value={this.state.interview.contactPerson} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Fecha</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\" onChange={this.handleInputChange} value={this.state.interview.date} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Hora</Form.Label>\n                    <Form.Control type=\"time\" name=\"time\" onChange={this.handleInputChange} value={this.state.interview.time} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Información adicional</Form.Label>\n                    <Form.Control type=\"text\" name=\"additionalInfo\" onChange={this.handleInputChange} value={this.state.interview.additionalInfo} />\n                </Form.Group>\n               \n                <Button variant=\"danger\" type=\"submit\">Añadir entrevista</Button>\n\n            </Form>\n        )\n    }\n}\n\nexport default InterviewForm","import React, { Component } from 'react'\nimport Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport EditApplication from '../applications/Application-edit'\nimport InterviewForm from '../agenda/Interview-form'\n\n\n\nclass ApplicationDetail extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = { \n            application: [],\n            showModalWindow: false,\n            showModalInterviewForm: false,\n            loggedInUser: props.loggedInUser\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => this.setState({ showModalWindow: false })\n    \n\n    handleInterviewShow = () => this.setState({ showModalInterviewForm: true })\n    handleInterviewClose = () =>  this.setState({ showModalInterviewForm: false })\n\n    componentDidMount = () => {\n        this.details()}\n\n    \n    details = () => {   \n        const applicationId = this.props.match.params.id\n        this._service.getOneApplication(applicationId)\n        \n            .then(theApplication => {\n                this.setState({ application: theApplication.data })\n                console.log(this.state.application)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n\n        let button\n        let interview\n\n\n\n    if(this.state.application.status === \"Interview\") {\n        console.log(this.state.application)\n        button = <Button variant=\"danger\" onClick={this.handleInterviewShow} >Añade una entrevista</Button> \n    }\n\n    let uno = console.log(this.state.application.interviews && this.state.application.interviews)\n\n    // this.state.application.interviews && \n\n        return (\n\n            <>\n            <Container>\n                <section>\n                    <Row>\n                        <Col md={6}>\n                            <h1>Posición {this.state.application.position}</h1>\n                            <p><strong>Empresa:</strong> {this.state.application.company}</p>\n                            <hr></hr>        \n                            {uno}\n                            {/* <p>( {this.state.application.interviews[0]}</p>                    */}\n\n                            <p><small><a href={this.state.application.link} target=\"_blank\">Link a la oferta</a></small></p> \n\n\n                            <p>{interview}</p>\n                            <Link to=\"/dashboard\" className=\"btn btn-dark\">Volver</Link>\n                        </Col>\n                        {/* <Col md={{ span: 4, offset: 2 }}>\n                            <img src={this.state.coaster.imageUrl} alt={this.state.coaster.title}></img>\n                        </Col> */}\n                    </Row>\n                </section>\n\n                <Button variant=\"light\" onClick={this.handleShow} >Edita candidatura</Button>\n                \n                {button}\n\n\n\n\n            </Container>\n\n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edita la candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EditApplication updateEdit={this.details} edit={this.state.application} closeModalWindow={this.handleClose} loggedInUser={this.state.loggedInUser} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal>\n\n\n            <Modal show={this.state.showModalInterviewForm} onHide={this.handleInterviewClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Añade una entrevista</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InterviewForm interviewAdd={this.state.application} closeModalInterviewWindow={this.handleInterviewClose} loggedInUser={this.state.loggedInUser} />\n            </Modal.Body>\n            </Modal>\n\n            </>\n        )\n    }\n\n}\n\nexport default ApplicationDetail","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Service from '../../service/Auth.service'\n\n\nimport './Navbar.css';\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        \n    }\n\n    logoutUser = () => {\n        this._service.logout()\n            .then(x => {\n                this.props.setUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n\n        // const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\n\n        let buttonStyle = {\n            color: \"#1C1259\",\n            cursor: \"pointer\"\n        }\n\n\n\n        return (\n\n            this.props.loggedInUser ?\n\n                <Navbar className=\"color-nav\" variant=\"dark\" expand=\"md\" >\n                    <Navbar /*style={logoStyle}*/ className=\"logo\" as=\"li\"><Link className=\"logoLink\" to=\"/\">kandidat</Link></Navbar>\n                    <Navbar.Toggle className=\"toggle\" aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"ml-auto theLinks\">\n                        <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to='/dashboard' >Dashboard</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/company\">Empresa</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/mail\">Email</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/agenda\">Agenda</Link></Nav.Link>\n                            <Nav.Link style={buttonStyle} as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\n                        </Nav>\n                        {/* <Nav className=\"ml-auto bienvenido\">\n                            <Navbar.Text style={buttonStyle}>Bienvenid@ {saludo}</Navbar.Text>\n                        </Nav> */}\n                    </Navbar.Collapse>\n                </Navbar>\n\n            :\n\n            <Navbar className=\"color-nav\" variant=\"dark\" expand=\"md\">\n                    <Navbar /*style={logoStyle}*/ className=\"logo\" as=\"li\"><Link className=\"logoLink\" to=\"/\">kandidat</Link></Navbar>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n                <Nav className=\"ml-auto theLinks\">\n                    <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                    <Nav.Link as=\"li\"><Link to=\"/signup\">Registro</Link></Nav.Link>\n                    <Nav.Link as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        )\n    }\n}\n\nexport default Navigation","import React, { Component } from 'react'\nimport { Button, Form, Container } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass SignupForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = { \n            username: '', \n            password: '',\n            showPassword: false,\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state\n        this._service.signup(username, password)\n            .then(theNewUser => {\n                this.props.setUser(theNewUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push(`/dashboard`)            // REDIRECCIONAMIENTO\n                // this.props.history.push(`/dashboard/${theNewUser.data._id}`)            // REDIRECCIONAMIENTO\n            })\n            .catch(err => console.log(err.response.data.message))\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleCheckboxChange = () => this.setState({ showPassword: !this.state.showPassword })\n\n\n    render() {\n\n        let inputType\n\n        if(this.state.showPassword) {\n        \n            inputType = \n            \n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        } else {\n\n            inputType = \n\n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        }\n\n\n        return (\n            <Container>\n\n                <h1>Registro</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    \n                    {inputType}\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check onChange={this.handleCheckboxChange} type=\"checkbox\" label=\"Ver contraseña\" />\n                    </Form.Group>\n\n\n                    <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default SignupForm","import React, { Component } from 'react'\nimport { Button, Form, Container, Toast } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showToast: false,\n            toastText: '',\n            user: { username: '', \n            password: '',\n            showPassword: false,\n            }\n        }\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state.user\n        this._service.login(username, password)\n            .then(theLoggedUser => {\n                this.props.setUser(theLoggedUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push(`/dashboard`)  \n                // this.props.history.push(`/dashboard/${theLoggedUser.data._id}`)            // REDIRECCIONAMIENTO\n            })\n            .catch(err => {\n                this.handleToastOpen(err.response.data.message)\n            })\n    }\n\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\n\n    handleCheckboxChange = () => this.setState({ showPassword: !this.state.showPassword })\n    \n    render() {\n\n        let inputType\n\n        if(this.state.showPassword) {\n        \n            inputType = \n            \n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        } else {\n\n            inputType = \n\n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        }\n\n        return (\n            <Container>\n\n                <h1>Iniciar sesión</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    {inputType}\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check onChange={this.handleCheckboxChange} type=\"checkbox\" label=\"Ver contraseña\" />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                </Form>\n\n                <Toast\n                    onClose={this.handleToastClose}\n                    show={this.state.showToast}\n                    delay={3000}\n                    autohide\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '10px',\n                        minWidth: '250px'\n                    }}>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Error</strong>\n                        <small>Gestor de sesiones</small>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toastText}</Toast.Body>\n                </Toast>\n\n            </Container >\n        )\n    }\n}\n\n\nexport default LoginForm","import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Service from './service/Auth.service'\n\n\n/* ---------  PAGE COMPONENTS --------- */\n\nimport Index from './components/pages/Index'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Company from './components/company/Company'\nimport Mail from './components/mails/Mails'\nimport Agenda from './components/agenda/Agenda'\nimport ApplicationDetails from './components/applications/Application-details'\nimport InterviewForm from './components/agenda/Interview-form'\n\n\n\n/* ---------  UI COMPONENTS --------- */\n\nimport Navbar from './components/ui/Navbar'\nimport CookieConsent from \"react-cookie-consent\";\n\n\n\n/* ---------  AUTH COMPONENTS --------- */\n\nimport Signup from './components/auth/Signup'\nimport Login from './components/auth/Login'\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this._service = new Service()\n  }\n\n  componentDidMount = () => console.log(this.state.loggedInUser)\n\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user })\n    console.log(\"El método 'setTheUser' de App.js se ha invocado, pasando al estado 'loggedInUser:\", this.state.loggedInUser)\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this._service.loggedin()\n        .then(theLoggedInUserFromTheServer => this.setState({ loggedInUser: theLoggedInUserFromTheServer.data }))\n        .catch(err => {\n          this.setState({ loggedInUser: false })\n          console.log({ err })\n        })\n    }\n  }\n\n  render() {\n\n    this.fetchUser()\n\n    let acceptButton = {\n      background: \"#CACAEA\",\n      cursor: \"pointer\",\n      }\n \n    return (\n      <>\n        <Navbar loggedInUser={this.state.loggedInUser} setUser={this.setTheUser} /*idUser={this.state.loggedInUser.data._id}*/ />\n\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n          <Route path=\"/company\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <Company loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n          <Route path=\"/mail\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <Mail loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/agenda\" render={match => \n            this.state.loggedInUser == null ? \n            <Redirect to=\"/agenda\"/> \n            : this.state.loggedInUser ?\n               <Agenda loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> \n               : <Redirect to=\"/\"/>}\n            />\n\n\n          <Route path=\"/application/:id\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <ApplicationDetails loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/newInterview\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <InterviewForm loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/dashboard\" render={match => \n            this.state.loggedInUser == null ? \n            <Redirect to=\"/dashboard\"/> \n            : this.state.loggedInUser ?\n               <Dashboard loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> \n               : <Redirect to=\"/\"/>}\n            />\n\n          <Route path=\"/signup\" render={match => <Signup setUser={this.setTheUser} {...match} />} />\n          <Route path=\"/login\" render={match => <Login setUser={this.setTheUser} {...match} />} />\n\n\n          </Switch>\n\n          <CookieConsent location=\"bottom\"\n            buttonText=\"3, 2, 1... JavaScript!!\"\n            cookieName=\"thisIsTheCookieName\"\n            style={{ background: '#EE4266' }}\n            buttonStyle={{ acceptButton }}\n            expires={30} \n            debug={true}\n            containerClasses=\"alert-warning\"\n            acceptOnScroll={true}\n            acceptOnScrollPercentage={50}\n            >\n              KANDIDAT utilizaría este apartado para informarte del uso de cookies.\n          </CookieConsent>\n\n      </>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister()\n"],"sourceRoot":""}