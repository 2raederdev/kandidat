{"version":3,"sources":["service/Auth.service.js","components/pages/Index.js","service/Dashboard.service.js","components/applications/Application-card.js","service/Files.service.js","components/applications/Application-form.js","components/dashboard/Statuscol.js","components/dashboard/Dashboard.js","service/Interview.service.js","components/company/Searchbar.js","components/company/Company.js","components/mails/Mails.js","components/agenda/Map.js","components/agenda/Map-oneInterview.js","components/agenda/Interview-details.js","components/agenda/Interview-edit.js","components/agenda/Interview-card.js","components/agenda/NewCalendar.js","components/agenda/Agenda.js","components/applications/Application-edit.js","components/agenda/Interview-form.js","components/applications/Application-details.js","components/ui/Navbar.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","_service","post","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Index","Container","style","fontSize","getAllApplications","getAllApplicationsCVSent","getAllApplicationsInterview","getAllApplicationsOffer","getAllApplicationsHired","getAllApplicationsRejected","getAllApplicationsNotInterested","createApplication","application","getOneApplication","id","deleteApplication","editApplication","company","position","status","link","ApplicationCard","props","state","_id","loggedInUser","Card","className","width","Body","Title","Subtitle","to","Button","onClick","delete","variant","Link","as","href","color","cursor","Component","handleUpload","theFile","_filesService","ApplicationForm","handleSubmit","e","preventDefault","then","closeModalWindow","updateTheApplications","catch","err","console","log","handleInputChange","target","name","value","active","setState","handleFileUpload","disabledButton","buttonText","uploadData","FormData","append","files","response","data","secure_url","imageUrl","Service","_authservice","AuthService","FilesService","user","theStatus","Form","onSubmit","Group","Label","Control","required","type","onChange","disable","StatusCol","handleShow","showModalWindow","handleClose","componentDidMount","updateApplicationsList","allApplicationsFromDB","withId","filter","applications","title","Row","map","key","Modal","show","onHide","Header","closeButton","React","Dashboard","marginLeft","marginRight","Col","lg","md","sm","getAllInterviews","_interviewService","createInterview","interview","deleteInterview","editInterview","address","contactPerson","date","time","additionalInfo","Searchbar","nameCompany","event","window","open","placeholder","onChangeName","bind","email","inputEmail","searchGoogle","Company","Mail","emailAddress","emailSubject","emailBody","onChangeMail","rows","sendMail","Geocode","setApiKey","Map","updateInterviewsList","allInterviewsFromDB","interviews","addressesCopy","addresses","forEach","elm","fromAddress","results","geometry","location","lat","lng","push","error","setInterview","selectedInterview","handleToggleOpen","isOpen","handleToggleClose","InterviewService","defaultZoom","defaultCenter","idx","icon","url","scaledSize","google","maps","Size","onCloseClick","WrappedMap","withScriptjs","withGoogleMap","InterviewDetails","initialized","details","dateShowed","addressShowed","substr","height","googleMapURL","loadingElement","containerElement","mapElement","EditInterview","x","updateCard","updateAgenda","handle","edit","interviewAddress","selected","InterviewCard","handleEditShow","showEditModalWindow","handleEditClose","handleDelete","handleConfirmShow","showConfirmModalWindow","handleConfirmCloseAndDelete","showModalConfirmWindow","handleConfirmCloseWithoutDelete","update","span","offset","animation","Footer","handler","localizer","momentLocalizer","moment","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","MyCalendar","updateMyInterviewsList","a","b","c","listCopy","myInterviewsList","aux","start","end","showInterview","events","startAccessor","endAccessor","Agenda","NewCalendar","EditApplication","updateEdit","InterviewForm","closeModalInterviewWindow","interviewAdd","ApplicationDetail","handleInterviewShow","showModalInterviewForm","handleInterviewClose","applicationId","match","params","theApplication","button","length","src","alt","Navigation","logoutUser","setUser","Navbar","expand","Toggle","background","aria-controls","Collapse","Nav","activeStyle","textDecoration","SignupForm","theNewUser","history","message","handleCheckboxChange","showPassword","inputType","controlId","Check","label","LoginForm","theLoggedUser","handleToastOpen","handleToastClose","showToast","toastText","text","Toast","onClose","delay","autohide","right","bottom","minWidth","App","setTheUser","fetchUser","theLoggedInUserFromTheServer","exact","path","component","render","Signup","Login","cookieName","buttonStyle","expires","debug","containerClasses","acceptOnScroll","acceptOnScrollPercentage","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86255190.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    signup = (username, password) => this._service.post('/signup', { username, password })\n    login = (username, password) => this._service.post('/login', { username, password })\n    logout = () => this._service.post('/logout')\n    loggedin = () => this._service.get('/loggedin')\n}","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport './index.css'\n\nconst Index = () => {\n\n    let h1Style = {\n        fontSize: 5+'em'\n    }\n\n    return (\n        <Container>\n            <section>\n                <h1 style={h1Style}>Kandidat</h1>\n                <p>Todas tus candidaturas en un único lugar.</p>\n            </section>\n        </Container>\n    )\n}\n\nexport default Index","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/dashboard`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    getAllApplications = () => this._service.get('/dashboard')\n\n    getAllApplicationsCVSent = () => this._service.get('/dashboardcvsent')\n\n    getAllApplicationsInterview = () => this._service.get(`/dashboardinterview`)\n\n    getAllApplicationsOffer = () => this._service.get(`/dashboardoffer`)\n\n    getAllApplicationsHired = () => this._service.get(`/dashboardhired`)\n\n    getAllApplicationsRejected = () => this._service.get(`/dashboardrejected`)\n\n    getAllApplicationsNotInterested = () => this._service.get(`/dashboardnotinterested`)\n    \n    createApplication = application => this._service.post('/new', application)\n\n    getOneApplication = id => this._service.get(`/application/${id}`)\n\n    // deleteOneApplication = id => this._service.get(`/application/${id}`)\n\n    deleteApplication = id => this._service.get(`/delete/${id}`)\n\n    editApplication = ( id, { company, position, status, link } ) => this._service.post(`/application/${id}`, {company, position, status, link})\n\n}\n","import React, { Component } from 'react'\n\nimport { Card, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\nimport './Application.css'\n\n// const ApplicationCard = ({_id, position, company }) => {\n\nclass ApplicationCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            application: {\n                id:props._id,\n                company: props.company,\n                position: props.position,\n                link: props.link,\n                status: props.status           \n            },\n            loggedInUser: props.loggedInUser,\n        }\n    }\n\n\n    render(){\n\n\n\n        let borrar = {\n            color: \"#CACAEA\",\n            cursor: \"pointer\"\n        }\n   \n\n    return (\n        <>\n        <Card className=\"applicationCard\" style={{ width: '11rem' }}>\n            <Card.Body>\n\n                <Card.Title>{this.state.application.position}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">{this.state.application.company} </Card.Subtitle>\n\n                <Link to={`/application/${this.state.application.id}`} className=\"btn btn-dark\">Detalles</Link>\n                \n                <Button onClick={() => \n                    this.props.delete(this.state.application.id)\n                    } variant=\"dark\">Borrar</Button>\n\n\n                <Card.Link \n                    as=\"li\"\n                    loggedInUser={this.state.loggedInUser} \n                    className=\"detallesLink\" \n                    href={`/application/${this.state.application.id}`}>\n                    <Link                      \n                        className=\"detallesLink\" \n                        loggedInUser={this.state.loggedInUser} \n                        to={`/application/${this.state.application.id}`}>\n                        Detalles\n                    </Link>\n                </Card.Link>        \n                 \n                <Card.Link style={borrar} className=\"borrar\" onClick={() => \n                    this.props.delete(this.state.application.id)\n                    } >Borrar</Card.Link>                \n\n\n            </Card.Body>\n        </Card>\n    \n    </>\n    )\n}\n}\n    \nexport default ApplicationCard","\nimport axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._filesService = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/files`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    handleUpload = theFile => this._filesService.post('/upload', theFile)\n}\n","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n\nimport Service from '../../service/Dashboard.service'\nimport AuthService from '../../service/Auth.service'\nimport FilesService from '../../service/Files.service'\n\n\nclass ApplicationForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._authservice = new AuthService()\n        this._filesService = new FilesService()\n        this.state = {\n            disabledButton: false,\n            buttonText: 'Crear candidatura',\n            application: {\n                user: props.loggedInUser,\n                company: \"\",\n                position: \"\",\n                link: \"\",\n                active: \"\",\n                status: props.theStatus,\n                imageUrl: \"\"           }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this._service.createApplication(this.state.application)\n            .then(() => {\n                this.props.closeModalWindow()\n                this.props.updateTheApplications()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.state.application.active = true\n        this.setState({\n            application: { ...this.state.application, [name]: value },\n        })\n    }\n\n    handleFileUpload = e => {\n        this.setState({ disabledButton: true, buttonText: 'Subiendo imagen...' })\n\n        const uploadData = new FormData()\n        uploadData.append(\"imageUrl\", e.target.files[0])\n        this._filesService.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n                this.setState({\n                    disabledButton: false,\n                    buttonText: 'Crear candidatura',\n                    application: { ...this.state.application, imageUrl: response.data.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        \n        return (\n            // this.props.closeModalWindow() ? <Redirect to=\"/dashboard\"/> : null\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa</Form.Label>\n                    <Form.Control required={true} type=\"text\" name=\"company\" onChange={this.handleInputChange} value={this.state.company} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición</Form.Label>\n                    <Form.Control required={true} type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.position} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Link a la oferta</Form.Label>\n                    <Form.Control required={true} type=\"text\" name=\"link\" onChange={this.handleInputChange} value={this.state.link} />\n                </Form.Group>\n                <Form.Group>\n                {/* <Form.Label>Estado</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"status\" onChange={this.handleInputChange} selected={this.state.status}>\n                    <option value=\"CV Sent\">CV Sent</option>\n                    <option value=\"Interview\">Interview</option>\n                    <option value=\"Offer\">Offer</option>\n                    <option value=\"Hired\">Hired</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"Not interested\">Not interested</option>\n                </Form.Control> */}\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Imagen URL</Form.Label>\n                    <Form.Control required={true} name=\"imageUrl\" type=\"file\" onChange={this.handleFileUpload} />\n                </Form.Group>\n               \n                <Button variant=\"danger\" disable={this.state.disabledButton} type=\"submit\">{this.state.buttonText}</Button>\n\n            </Form>\n        )\n    }\n}\n\nexport default ApplicationForm","import React from 'react'\n\nimport Service from '../../service/Dashboard.service'\n\nimport ApplicationCard from '../applications/Application-card'\nimport ApplicationForm from '../applications/Application-form'\n\n\nimport { Row, Modal, Button } from 'react-bootstrap'\n\n\nimport './Dashboard.css';\n\nclass StatusCol extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showModalWindow: false,\n            applications: [],\n            loggedInUser: props.loggedInUser._id\n\n        }\n    }\n\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => {\n        console.log(\"Entra la función hadleClose\")\n    this.setState({ showModalWindow: false })\n    }\n\n\n    componentDidMount = () => {\n        this.updateApplicationsList()\n    }\n\n    deleteApplication = id => {\n\n        this._service.deleteApplication(id)\n        this.updateApplicationsList()\n    }\n\n    updateApplicationsList = () => {\n\n        if (this.props.className === \"CV Sent\") {\n            this._service.getAllApplicationsCVSent()\n                .then(allApplicationsFromDB => { \n                    console.log(\"es la llamadaaaaaaaa\")\n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Interview\") {\n            this._service.getAllApplicationsInterview()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        }   else if (this.props.className === \"Offer\") {\n            this._service.getAllApplicationsOffer()\n                .then(allApplicationsFromDB => { \n\n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Hired\") {\n            this._service.getAllApplicationsHired()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Rejected\") {\n            this._service.getAllApplicationsRejected()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } else if (this.props.className === \"Not interested\") {\n            this._service.getAllApplicationsNotInterested()\n                .then(allApplicationsFromDB => { \n                    \n                    let withId = \n                    allApplicationsFromDB.data.filter(application => application.user  === this.state.loggedInUser\n                    )\n\n                    this.setState({ applications: withId})\n                })\n                .catch(err => console.log(\"Error\", err))\n        } \n    }\n\n\n    render() {\n\n\n        return (\n            <>\n        <section>\n\n            <p>{this.props.title}</p>\n            \n            <Row className={this.props.className}>\n                <Button variant=\"danger\" onClick={this.handleShow}>Nueva candidatura</Button>\n                    {this.state.applications.map(application => <ApplicationCard delete={this.deleteApplication} key={application._id} {...application} />)}\n            </Row>  \n\n\n\n\n\n            </section>\n            \n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Nueva candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ApplicationForm loggedInUser={this.state.loggedInUser} theStatus={this.props.className} closeModalWindow={this.handleClose} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal>\n\n            </>\n        )\n    }\n}\n    \nexport default StatusCol\n\n","import React from 'react'\nimport Service from '../../service/Dashboard.service'\n\nimport { Container, Col, Row, Form } from 'react-bootstrap'\n\nimport StatusCol from './Statuscol'\nimport ApplicationForm from '../applications/Application-form'\n\nimport './Dashboard.css';\n\n\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            applications: [],\n            showModalWindow: false,\n            loggedInUser: props.loggedInUser\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => {\n        console.log(\"Entra la función hadleClose\")\n    this.setState({ showModalWindow: false })\n    }\n  \n    render() {\n\n    \n\n        return (\n\n            <>\n\n\n            <section>\n                {/* {false ? \"es true\" : <p>no es true\"</p>} */}\n\n                <Container style={{ marginLeft: 20, marginRight: 20 }}>\n\n                    {/* <Button className=\"navBar\" variant=\"danger\" onClick={this.handleShow}>Nueva candidatura</Button> */}\n                    <Row>\n                    <h1>Hola {this.state.loggedInUser.username}!!! Éste es tu dashboard!!!</h1>\n                    </Row>\n                    <Row style={{ marginLeft: 20, marginRight: 20 }}>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"CV Sent\" title=\"CV Sent\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}}lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Interview\" title=\"Interview\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Offer\" title=\"Offer\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Hired\" title=\"Hired\"/>\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Rejected\" title=\"Rejected\" />\n                        </Col>\n                        <Col style={{marginLeft:20}} lg={2} md={6} sm={12}>\n                            <StatusCol loggedInUser={this.state.loggedInUser} className=\"Not interested\" title=\"No interest\" />\n                        </Col>\n                        \n                    </Row>\n \n                </Container>\n\n            </section>\n\n            {/* <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Nueva candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ApplicationForm closeModalWindow={this.handleClose} loggedInUser={this.state.loggedInUser} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal> */}\n\n        </>\n\n        )\n    }\n}\n\nexport default Dashboard","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._interviewService = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/interviews`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    getAllInterviews = () => this._interviewService.get('/interviewslist')\n   \n    createInterview = interview => this._interviewService.post('/newInterview', interview)\n\n    deleteInterview = id => this._interviewService.get(`/delete/${id}`)\n\n    editInterview = ( id, { company, position, type, address, contactPerson, date, time, additionalInfo } ) => this._interviewService.post(`/edit/${id}`, {company, position, type, address, contactPerson, date, time, additionalInfo})\n\n}","\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport { Container, Form, Button } from 'react-bootstrap'\n\n// import Button from './sendMail'\n\n\nclass Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        nameCompany: '',\n        }\n    }\n\n    onChangeName(event) {\n        this.setState({\n            nameCompany:event.target.value\n        });\n\n    }\n\n    searchGoogle(){\n      window.open(\"//\" + \"google.com/search?q=\" + this.state.nameCompany, '_blank')\n\n    }\n\n    render() {\n\n      return (\n\n        <Form>\n\n        <Form.Group>\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control placeholder=\"Por ejemplo: Ironhack\" type=\"text\" onChange={this.onChangeName.bind(this)}/>\n        </Form.Group>\n\n        <Button target=\"_blank\" email={this.state.inputEmail} onClick={this.searchGoogle.bind(this)}>Buscar empresa</Button>\n        \n        </Form>\n\n\n  );\n}\n}\n\nexport default Searchbar;","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport Searchbar from './Searchbar'\n\n\nconst Company = () => {\n\n    return (\n        <Container>\n            <section>\n                <h1>Empresa</h1>\n                <p>Busca toda la info de una empresa</p>\n\n                <Searchbar />\n\n            </section>\n        </Container>\n    )\n}\n\nexport default Company","\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport { Container, Form, Button } from 'react-bootstrap'\n\n// import Button from './sendMail'\n\n\nclass Mail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        emailAddress: '',\n        emailSubject: '',\n        emailBody: ''\n        }\n    }\n\n    onChangeMail(e) {\n        let { name, value } = e.target\n        this.setState({\n            [name]: value\n        });\n    }\n\n    sendMail(){\n        window.open(`mailto:${this.state.emailAddress}?subject=${this.state.emailSubject}&body=${this.state.emailBody}`)\n    }\n\n    render() {\n\n        return (\n\n            <>\n            <Container>\n                <section>\n                    <h1>Mails</h1>\n                    <p>Comprueba si un email existe</p>\n\n                    <Form>\n\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control placeholder=\"Introduce la dirección de correo electrónico\" type=\"text\" name=\"emailAddress\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Asunto</Form.Label>\n                            <Form.Control placeholder=\"Introduce el asunto de tu correo\" type=\"text\" name=\"emailSubject\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Texto del mensaje</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Escribe tu correo\" type=\"text\" name=\"emailBody\" onChange={this.onChangeMail.bind(this)}/>\n                        </Form.Group>\n\n\n                        <Button target=\"_blank\" email={this.state.inputEmail} onClick={this.sendMail.bind(this)}>Enviar mail</Button>\n                    </Form>\n                </section>\n            </Container>\n\n            </>\n\n    \n        )\n    }\n}\n\nexport default Mail","/*global google*/\n\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\"\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyC0Hl0lxEoQa6Oy0mdrsk5eu4LZjGX4szU\");\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this._interviewService = new InterviewService();\n    this.state = {\n      interviews: [],\n      address: \"\",\n      addresses: [],\n      isOpen: false,\n      selectedInterview: null,\n      loggedInUser: props.loggedInUser._id,\n    };\n  }\n\n  componentDidMount = () => this.updateInterviewsList()\n\n  updateInterviewsList = () => {\n\n  this._interviewService.getAllInterviews()\n      .then(allInterviewsFromDB => {\n        \n        let withId = \n                    allInterviewsFromDB.data.filter(interview => interview.user  === this.state.loggedInUser\n                        )\n        \n        \n        this.setState({ interviews: withId})\n      const addressesCopy = [...this.state.addresses];\n      console.log(this.state.loggedInUser._id)\n      this.state.interviews.forEach(elm => {\n        Geocode.fromAddress(elm.address)\n          .then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location;\n              addressesCopy.push({ lat, lng });\n              this.setState({\n                address: { lat, lng },\n                addresses: addressesCopy\n              });\n            },\n            error => console.error(error)            \n          )\n          .catch(err => console.log(err));\n      }); \n  })\n    .catch(err => console.log(\"Error\", err));\n  }\n\n  setInterview = interview => this.setState ({ selectedInterview: interview })\n\n  handleToggleOpen = () => this.setState({ isOpen: true }) \n\n  handleToggleClose = () => this.setState({ isOpen: false })\n\n\n  render() {\n\n    return (\n\n        <GoogleMap\n        defaultZoom={10}\n        defaultCenter={{ lat: 40.4165, lng: -3.70256 }}\n      >\n\n        {this.state.addresses.map((elm, idx) => (\n          <>\n            <Marker\n              key={idx}\n              position={elm}\n              onClick={() => {\n                this.setInterview(elm)\n                //  this.handleToggleOpen(elm)\n                }}\n                icon={{\n                  url: \"https://res.cloudinary.com/tworaederdev/image/upload/v1576434174/qandidat/kandidatmarker_rvply5.png\",\n                  scaledSize: new google.maps.Size(31, 43)\n                }}\n            ></Marker>\n          </>\n        ))}\n        {this.state.selectedInterview && (\n          <InfoWindow \n            position={this.state.selectedInterview}\n            onCloseClick = {() => { \n              {this.setInterview(null)}\n          \n          }}\n          >\n            <>\n        <h4>Aquí tienes una entrevista.</h4>\n              <p>Busca en la lista para saber más</p>          \n          </>\n          </InfoWindow>\n        )} \n\n\n      </GoogleMap>\n\n    );\n  }\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\n\nexport default WrappedMap;","/*global google*/\n\nimport React, { Component } from \"react\"\n\nimport InterviewService from \"../../service/Interview.service\"\n\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\"\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyC0Hl0lxEoQa6Oy0mdrsk5eu4LZjGX4szU\");\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this._interviewService = new InterviewService();\n    this.state = {\n      interview: props.interview,\n      address: \"\",\n      isOpen: false,\n    };\n  }\n\n  componentDidMount = () => this.updateInterviewsList()\n\n  updateInterviewsList = () => {\n\n        Geocode.fromAddress(this.state.interview.address)\n          .then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location;\n              this.setState({\n                address: { lat, lng },\n              });\n            },\n            error => console.error(error)            \n          )\n          .catch(err => console.log(err));\n  }\n\n\n  handleToggleOpen = () => this.setState({ isOpen: true })\n\n  handleToggleClose = () => this.setState({ isOpen: false })\n\n\n  render() {\n\n    return (\n        <GoogleMap defaultZoom={10} defaultCenter={{ lat: 40.4165, lng: -3.70256 }}>\n        <Marker \n            position={this.state.address}\n            icon={{\n                url: \"https://res.cloudinary.com/tworaederdev/image/upload/v1576434174/qandidat/kandidatmarker_rvply5.png\",\n                scaledSize: new google.maps.Size(31, 43)\n            }}\n        ></Marker>\n        </GoogleMap>\n    )\n  }\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default WrappedMap;","import React, { Component } from 'react'\n\nimport { Container, Col, Row } from 'react-bootstrap'\n\nimport WrappedMap from \"./Map-oneInterview\";\n\nimport Service from '../../service/Dashboard.service'\n\nclass InterviewDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            interview: props.details,\n        }\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.closeModalWindow()\n    }  \n    \n    componentDidMount = () => this.setState({ initialized: true})\n\n    render() {\n\n        let dateShowed, addressShowed \n\n        dateShowed = this.state.interview.date ? this.state.interview.date.substr(0,10) : null\n\n        addressShowed = this.state.interview.type === \"Presencial\" ? \n        <p className=\"mb-2 text-muted\">Dirección: <small>{this.state.interview.address}</small></p>            \n        : null\n\n        return (     \n            \n            <Container onSubmit={this.handleSubmit}>\n\n                <Row>\n\n                    <Col md={6}>\n                        <p className=\"mb-2 text-muted\">Empresa:<small>{this.state.interview.company}</small></p>\n                        <p className=\"mb-2 text-muted\">Posición: <small>{this.state.interview.position}</small></p>            \n                        {addressShowed}\n                        <p className=\"mb-2 text-muted\">Persona de contacto: <small>{this.state.interview.contactPerson}</small></p>            \n                        <p className=\"mb-2 text-muted\">Fecha: <small>{dateShowed}</small></p>            \n                        <p className=\"mb-2 text-muted\">Hora: <small>{this.state.interview.time}</small> </p>            \n                        <p className=\"mb-2 text-muted\">Información adicional: <small>{this.state.interview.additionalInfo}</small></p>            \n                    </Col>  \n\n                    <Col md={6}>\n                        <div style={{ width: \"100%\", height: \"50vh\" }}>\n                            <WrappedMap\n                            interview={this.state.interview}\n                            \n                            googleMapURL=\n                            {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`}\n                            loadingElement={<div style={{ height: \"120%\" }} />}\n                            containerElement={<div style={{ height: \"100%\" }} />}\n                            mapElement={<div style={{ height: \"100%\" }} />}\n                            />\n                        </div>\n                    </Col>\n\n                </Row>\n\n            </Container>\n\n        )\n        }\n}\n\n\n\nexport default InterviewDetails","import React, { Component } from 'react'\nimport InterviewService from '../../service/Interview.service'\nimport { Button, Form } from 'react-bootstrap'\n\nclass EditInterview extends Component {\n\n    constructor(props) {\n        super(props)\n        this._interviewService = new InterviewService()\n        this.state = { \n            interview: /*props.details*/\n            {\n                id: this.props.edit.id,\n                company: this.props.edit.company,\n                position: this.props.edit.position,\n                type: this.props.edit.type,\n                address: this.props.details.address,\n                contactPerson: this.props.details.contactPerson,\n                date: this.props.details.date,\n                time: this.props.details.time,\n                additionalInfo: this.props.details.additionalInfo\n            }\n        }\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            interview: { ...this.state.interview, [name]: value },\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const id = this.state.interview.id\n        const interview = this.state.interview\n        this._interviewService.editInterview(id, interview)\n            .then( x=> {\n                console.log(this.props.updateCard)\n                this.props.updateAgenda()\n                this.props.closeModalWindow()\n                this.props.handle()  \n\n            })\n            .catch(err => console.log(err))\n    }\n\n   \n    render() {\n\n        let interviewAddress\n\n        if(this.state.interview.type === \"Presencial\") {\n            \n            interviewAddress = \n            <Form.Group>\n                <Form.Label>Dirección</Form.Label>\n                <Form.Control type=\"text\" name=\"address\" onChange={this.handleInputChange} value={this.state.interview.address} />\n            </Form.Group>\n        }\n\n        return (\n\n            <>\n\n<Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa: {this.state.interview.company}</Form.Label>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición: {this.state.interview.position}</Form.Label>\n               </Form.Group>\n                <Form.Group>\n                <Form.Label>Tipo de entrevista</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"type\" onChange={this.handleInputChange} selected={this.state.interview.type}>\n                    <option value=\"Telefónica\">Telefónica</option>\n                    <option value=\"Vídeo\">Vídeo</option>\n                    <option value=\"Presencial\">Presencial</option>\n                    <option value=\"Coding Challenge\">Coding Challenge</option>\n                </Form.Control>\n                </Form.Group>\n                {interviewAddress}\n                <Form.Group>\n                    <Form.Label>Persona de contacto</Form.Label>\n                    <Form.Control type=\"text\" name=\"contactPerson\" onChange={this.handleInputChange} value={this.state.interview.contactPerson} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Fecha</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\" onChange={this.handleInputChange} value={this.state.interview.date} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Hora</Form.Label>\n                    <Form.Control type=\"time\" name=\"time\" onChange={this.handleInputChange} value={this.state.interview.time} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Información adicional</Form.Label>\n                    <Form.Control type=\"text\" name=\"additionalInfo\" onChange={this.handleInputChange} value={this.state.interview.additionalInfo} />\n                </Form.Group>\n\n                <Button variant=\"danger\" type=\"submit\" onClick={this.handleSubmit}>Guarda los cambios</Button>\n                <Button onClick={this.props.closeModalWindow}>Cerrar</Button>\n\n\n                </Form>\n               \n            </>\n\n        )\n    \n    }\n}\n\nexport default EditInterview","\nimport React, { Component } from 'react'\n\nimport { Card,Button, Modal, Container, Row, Col } from 'react-bootstrap'\n\nimport InterviewDetails from './Interview-details'\nimport EditInterview from './Interview-edit'\n\n\nclass InterviewCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            interview: {\n                id:props.interview._id,\n                company: props.interview.company,\n                position: props.interview.position,\n                type: props.interview.type,\n                address: props.interview.address,\n                contactPerson: props.interview.contactPerson,\n                date: props.interview.date,\n                time: props.interview.time,\n                additionalInfo: props.interview.additionalInfo  \n          }, \n            showModalWindow: false,\n            showEditModalWindow: false,\n            showConfirmModalWindow: false\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n\n    handleClose = () => this.setState({ showModalWindow: false })\n    \n    handleEditShow = () => this.setState({ showEditModalWindow: true, showModalWindow:false })\n\n    handleEditClose = () => this.setState({ showEditModalWindow: false, showModalWindow:false })\n\n    handleDelete = () => this.props.delete(this.state.interview.id)\n\n    handleConfirmShow = () => this.setState({ showConfirmModalWindow: true })\n\n    handleConfirmCloseAndDelete = () => {\n        this.setState({ showModalConfirmWindow: false })\n        this.handleDelete()\n    }\n\n    handleConfirmCloseWithoutDelete = () => this.setState({ showConfirmModalWindow: false })\n\n    updateAgenda = () => this.props.update()\n\n\n    render(){\n\n    return (\n        <>\n\n        <Container>\n            <Row>\n                <Col md={6}>\n                    <Card style={{ width: '15rem' }}>\n                        <Card.Body>\n\n                            <Card.Title>Entrevista</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Empresa: {this.state.interview.company} </Card.Subtitle>            \n                            <Card.Subtitle className=\"mb-2 text-muted\">Posición: {this.state.interview.position} </Card.Subtitle>                     \n\n                        </Card.Body>\n\n                        <Button variant=\"danger\" onClick={this.handleShow} >\n                            Ver detalles\n                        </Button>\n\n\n                        <Button variant=\"light\" onClick={this.handleConfirmShow}>\n                            Borrar entrevista\n                        </Button>\n\n                    </Card>\n                </Col>\n                <Col md={{ span: 4, offset: 2 }}>\n                    {/* Aquí irá el mapa */}\n                        </Col>\n            </Row>\n        </Container>\n\n       \n        <Modal show={this.state.showModalWindow} onHide={this.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Detalles</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InterviewDetails update={this.props.update} details={this.props.interview}  closeModalWindow={this.handleClose}/>\n            </Modal.Body>\n            <Modal.Footer>\n                    <Button onClick={this.handleEditShow}>Editar</Button>\n                    <Button onClick={this.handleClose}>Cerrar</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showEditModalWindow} onHide={this.handleEditClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Editar</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EditInterview details={this.props.interview} updateAgenda={this.updateAgenda} handler = {this.handleConfirmCloseAndDelete} edit={this.state.interview}  closeModalWindow={this.handleEditClose}/>\n            </Modal.Body>\n        </Modal>\n\n        <Modal show={this.state.showConfirmModalWindow} onHide={this.handleConfirmCloseWithoutDelete}>\n            <Modal.Header closeButton>\n                <Modal.Title>¿Estás seguro de querer eliminar esta entrevista?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Button onClick={this.handleConfirmCloseAndDelete}>Sí</Button>\n                <Button onClick={this.handleConfirmCloseWithoutDelete}>No</Button>\n            </Modal.Body>\n        </Modal>\n\n\n    \n    </>\n    )\n}\n}\n    \nexport default InterviewCard","import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport { Button } from 'react-bootstrap'\n\n\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n  \nconst localizer = momentLocalizer(moment);\n\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nlet yyyy = today.getFullYear();\n\ntoday = yyyy + '-' + mm + '-' + dd;\n\nclass MyCalendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myInterviewsList: [{\n                title: 'Today',\n                start: new Date(`${today} 10:22:00`),\n                end: new Date(`${today} 10:42:00`)\n              }],\n            interviews: this.props.interview,\n            loggedInUser: this.props.loggedInUser,\n            showInterview: false\n        }\n    }\n\n  updateMyInterviewsList = () => {\n\n    let listCopy = [...this.state.myInterviewsList]\n\n    let a, b, c\n\n    console.log(`Cuando estoy en línea sí   ${this.state}`)\n    console.log(this.props)\n\n    this.props.interview.map(elm => {\n\n      console.log(`super textos largos ${elm}`, ` mira mira mira   ${listCopy}`)\n\n      if(elm.date) a = elm.date.substr(0, 10) \n\n      b = elm.company\n\n      c = elm.time\n\n      let aux = { title: `${b}`,\n      start: new Date(`${a} ${c}:00`),\n      end: new Date(`${a} 22:00:00`) }\n  \n      listCopy.push(aux)\n\n      \n      \n    })\n\n    this.setState({myInterviewsList: listCopy})\n        \n  }\n\n    componentDidMount = () => this.updateMyInterviewsList()\n \n  render() {\n  \n    console.log(\"RENDER NEW CALENDAR \", this.props.interview)\n\n    return (\n\n      <>\n      <div\n      style={{ height: \"50vh\" }}\n      className=\"calendar-container\">\n\n                    <Calendar\n                    localizer={localizer}\n                    events={this.state.myInterviewsList}\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    />\n                  \n                </div>\n                </>\n\n    )\n  }\n}\n\nexport default MyCalendar;\n","\nimport React, { Component } from 'react'\n\nimport Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\n\nimport ScrollArea from 'react-scrollbar'\n\nimport \"./../agenda/agenda.css\"\n\nimport { Container, Col, Row, Button, Modal } from 'react-bootstrap'\n\nimport WrappedMap from \"./Map\";\n\nimport InterviewCard from './Interview-card'\n// import Calendar from './Calendar'\nimport NewCalendar from './NewCalendar'\n// import Calendar2 from 'react-calendar'\n\nclass Agenda extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = {\n            showModalWindow: false,\n            interviews: [],\n            initialized: false,\n            loggedInUser: props.loggedInUser,\n        }\n    } \n    \n    componentDidMount = () => {\n        this.updateInterviewsList()\n        this.setState({ initialized: true})\n    }\n\n    deleteInterview = id => {\n\n        this._interviewService.deleteInterview(id)\n        this.updateInterviewsList()\n    }\n\n    updateInterviewsList = () => {\n            this._interviewService.getAllInterviews()\n                .then(allInterviewsFromDB => { \n                    \n                    \n                     let withId = \n                    allInterviewsFromDB.data.filter(interview => interview.user  === this.state.loggedInUser._id\n                        )\n                        \n                        this.setState({ interviews: withId}, console.log(\"SET STATE AGENDA\" + this.state.interviews))\n                })\n                .catch(err => console.log(\"Error\", err))     \n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n\n    handleClose = () => {\n        this.setState({ showModalWindow: false }) \n    }\n\n    render() {\n      \n        return (\n            <>\n        <section>\n\n            <Container>\n\n            \n\n            <Row>\n\n                <Col md={5}>\n                <div style={{ width: \"100%\", height: \"100vh\" }}>\n                    {this.state.initialized && (\n                    <WrappedMap\n                    loggedInUser={this.state.loggedInUser}\n                    interview={this.state.interviews}\n                    googleMapURL=\n                    {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`}\n                    loadingElement={<div style={{ height: \"90%\" }} />}\n                    containerElement={<div style={{ height: \"90%\" }} />}\n                    mapElement={<div style={{ height: \"90%\" }} />}\n                    />)}\n                </div>\n                </Col>\n\n                <Col md={7}>\n                    <Row>                    \n                        <Button onClick={this.handleShow}>Ver Calendario</Button>\n                    </Row>\n                    <Row className=\"cardsList\" >\n                            {this.state.interviews.map(interview => <Col md={6}> <InterviewCard update={this.updateInterviewsList} delete={this.deleteInterview} key={interview._id} interview={interview} /></Col>)}                          \n                    </Row>\n                </Col> \n            </Row>\n\n            </Container>\n\n        </section>\n            \n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Calendario de entrevistas</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <NewCalendar className=\"calendar\" loggedInUser={this.state.loggedInUser} interview={this.state.interviews}/>\n            </Modal.Body>\n            <Modal.Footer>\n                    <Button onClick={this.handleEditShow}>Editar</Button>\n                    <Button onClick={this.handleClose}>Cerrar</Button>\n            </Modal.Footer>\n            </Modal> \n\n\n\n            </>\n        )\n    }\n}\n\n    \nexport default Agenda","import React, { Component } from 'react'\nimport Service from '../../service/Dashboard.service'\nimport { Button, Form } from 'react-bootstrap'\n\nclass EditApplication extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = { \n            application: {\n                company: this.props.edit.company,\n                position: this.props.edit.position,\n                status: this.props.edit.status,\n                link: this.props.edit.link,\n                id: this.props.edit._id\n            }\n        }\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            application: { ...this.state.application, [name]: value },\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const id = this.state.application.id\n        const application = this.state.application\n\n        console.log(this.state.application)\n        this._service.editApplication(id, application)\n            .then( x=> {\n                this.props.closeModalWindow()\n                this.props.updateEdit(x.data)\n            })\n            .catch(err => console.log(err))\n    }\n\n   \n    render() {\n        return (\n\n            <>\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa</Form.Label>\n                    <Form.Control type=\"text\" name=\"company\" onChange={this.handleInputChange} value={this.state.application.company} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición</Form.Label>\n                    <Form.Control type=\"text\" name=\"position\" onChange={this.handleInputChange} value={this.state.application.position} />\n                </Form.Group>\n                <Form.Group>\n                <Form.Label>Estado</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"status\" onChange={this.handleInputChange} selected={this.state.status}>\n                    <option value=\"CV Sent\">CV Sent</option>\n                    <option value=\"Interview\">Interview</option>\n                    <option value=\"Offer\">Offer</option>\n                    <option value=\"Hired\">Hired</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"Not interested\">Not interested</option>\n                </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Link a la oferta</Form.Label>\n                    <Form.Control type=\"text\" name=\"link\" onChange={this.handleInputChange} value={this.state.application.link} />\n                </Form.Group>\n               \n                <Button variant=\"danger\" type=\"submit\">Guarda los cambios</Button>\n\n            </Form>\n\n            </>\n\n        )\n    }\n\n}\n\nexport default EditApplication","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n\n// import Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\n\nclass InterviewForm extends Component {\n\n    constructor(props) {\n        super(props)\n        // this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = {\n            interview: {\n                user: props.interviewAdd.user,\n                company: props.interviewAdd.company,\n                position: props.interviewAdd.position,\n                application: props.interviewAdd._id,\n                type: \"Telefónica\",\n                address: \"\",\n                contactPerson: \"\",\n                date: \"\",\n                time: \"\",\n                additionalInfo: \"\"           \n            }\n\n        }\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state.interview)\n        this._interviewService.createInterview(this.state.interview)\n            .then(() => { \n                console.log(\"soy la respuesta del back\")\n                this.props.closeModalInterviewWindow()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            interview: { ...this.state.interview, [name]: value },\n        })\n    }\n\n    render() {\n\n        let interviewAddress\n\n        if(this.state.interview.type === \"Presencial\") {\n            \n            interviewAddress = \n            <Form.Group>\n                <Form.Label>Dirección</Form.Label>\n                <Form.Control type=\"text\" name=\"address\" onChange={this.handleInputChange} value={this.state.interview.address} />\n            </Form.Group>\n        }\n\n\n        return (\n\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Empresa: {this.state.interview.company}</Form.Label>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Posición: {this.state.interview.position}</Form.Label>\n               </Form.Group>\n                <Form.Group>\n                <Form.Label>Tipo de entrevista</Form.Label>\n                <Form.Control as=\"select\" type=\"text\" name=\"type\" onChange={this.handleInputChange} selected={this.state.interview.type}>\n                    <option value=\"Telefónica\" >Selecciona una opción</option>\n                    <option value=\"Telefónica\">Telefónica</option>\n                    <option value=\"Vídeo\">Vídeo</option>\n                    <option value=\"Presencial\">Presencial</option>\n                    <option value=\"Coding Challenge\">Coding Challenge</option>\n                </Form.Control>\n                </Form.Group>\n                {interviewAddress}\n                <Form.Group>\n                    <Form.Label>Persona de contacto</Form.Label>\n                    <Form.Control type=\"text\" name=\"contactPerson\" onChange={this.handleInputChange} value={this.state.interview.contactPerson} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Fecha</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\" onChange={this.handleInputChange} value={this.state.interview.date} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Hora</Form.Label>\n                    <Form.Control type=\"time\" name=\"time\" onChange={this.handleInputChange} value={this.state.interview.time} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Información adicional</Form.Label>\n                    <Form.Control type=\"text\" name=\"additionalInfo\" onChange={this.handleInputChange} value={this.state.interview.additionalInfo} />\n                </Form.Group>\n               \n                <Button variant=\"danger\" type=\"submit\">Añadir entrevista</Button>\n\n            </Form>\n        )\n    }\n}\n\nexport default InterviewForm","import React, { Component } from 'react'\nimport Service from '../../service/Dashboard.service'\nimport InterviewService from '../../service/Interview.service'\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport EditApplication from '../applications/Application-edit'\nimport InterviewForm from '../agenda/Interview-form'\n\n\n\nclass ApplicationDetail extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._interviewService = new InterviewService()\n        this.state = { \n            application: [],\n            showModalWindow: false,\n            showModalInterviewForm: false,\n            loggedInUser: props.loggedInUser\n        }\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => this.setState({ showModalWindow: false })\n    \n\n    handleInterviewShow = () => this.setState({ showModalInterviewForm: true })\n    handleInterviewClose = () => { \n        this.setState({ showModalInterviewForm: false })\n        this.details()\n}\n\n    componentDidMount = () => {\n        this.details()}\n\n    \n    details = () => {   \n        const applicationId = this.props.match.params.id\n        this._service.getOneApplication(applicationId)\n        \n            .then(theApplication => {\n                this.setState({ application: theApplication.data })\n                // this.state.application.interviews.map(elm => console.log(elm))\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n\n        let button\n        let interview\n\n\n\n    if(this.state.application.status === \"Interview\") {\n        button = <Button variant=\"danger\" onClick={this.handleInterviewShow} >Añade una entrevista</Button> \n    }\n\n    if(this.state.application.interviews && this.state.application.interviews.length != 0) \n        interview = <p><strong>Entrevistas:</strong></p> \n\n\n        return (\n\n            <>\n            <Container>\n                <section>\n                    <Row>\n                        <Col md={6}>\n                            <img src={this.state.application.imageUrl} alt={this.state.application.company}></img>\n                        </Col>\n                        <Col md={6}>\n                            <h1>Posición: {this.state.application.position}</h1>\n                            <p><strong>Empresa:</strong> {this.state.application.company}</p>\n                            {interview}\n                            {this.state.application.interviews && this.state.application.interviews.map(elm => <p key={elm._id}>Fecha: <small>{elm.date.substr(0,10)}</small> - Hora: <small>{elm.time}</small>  </p>)}\n                            \n                            \n                            \n                            <hr></hr>        \n                            \n                            <p><small><a href={this.state.application.link} target=\"_blank\">Link a la oferta</a></small></p> \n\n\n                            <Link to=\"/dashboard\" className=\"btn btn-dark\">Volver</Link>\n                        </Col>\n                      \n                    </Row>\n\n\n                </section>\n\n                <Button variant=\"light\" onClick={this.handleShow} >Edita candidatura</Button>\n                \n                {button}\n\n\n\n\n            </Container>\n\n            <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edita la candidatura</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EditApplication updateEdit={this.details} edit={this.state.application} closeModalWindow={this.handleClose} loggedInUser={this.state.loggedInUser} updateTheApplications={this.updateApplicationsList} />\n            </Modal.Body>\n            </Modal>\n\n\n            <Modal show={this.state.showModalInterviewForm} onHide={this.handleInterviewClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Añade una entrevista</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InterviewForm interviewAdd={this.state.application} closeModalInterviewWindow={this.handleInterviewClose} loggedInUser={this.state.loggedInUser} />\n            </Modal.Body>\n            </Modal>\n\n            </>\n        )\n    }\n\n}\n\nexport default ApplicationDetail","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Service from '../../service/Auth.service'\n\n\nimport './Navbar.css';\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        \n    }\n\n    logoutUser = () => {\n        this._service.logout()\n            .then(x => {\n                this.props.setUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n\n        // const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\n\n        let buttonStyle = {\n            color: \"#1C1259\",\n            cursor: \"pointer\"\n        }\n\n        let toggleStyle = {\n            background: \"#FF9B00\"\n        }\n\n\n\n        return (\n\n            this.props.loggedInUser ?\n\n                <Navbar className=\"color-nav\" variant=\"dark\" expand=\"md\" >\n                    <Navbar /*style={logoStyle}*/ className=\"logo\" as=\"li\"><Link className=\"logoLink\" to=\"/\">kandidat</Link></Navbar>\n                    <Navbar.Toggle style={toggleStyle} aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"ml-auto theLinks\">\n                        <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link as=\"li\" activeStyle={{color: 'red', textDecoration: 'none'}} ><Link to='/dashboard' >Dashboard</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/company\">Empresa</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/mail\">Email</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/agenda\">Agenda</Link></Nav.Link>\n                            <Nav.Link style={buttonStyle} as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\n                        </Nav>\n                        {/* <Nav className=\"ml-auto bienvenido\">\n                            <Navbar.Text style={buttonStyle}>Bienvenid@ {saludo}</Navbar.Text>\n                        </Nav> */}\n                    </Navbar.Collapse>\n                </Navbar>\n\n            :\n\n            <Navbar className=\"color-nav\" variant=\"dark\" expand=\"md\">\n                    <Navbar /*style={logoStyle}*/ className=\"logo\" as=\"li\"><Link className=\"logoLink\" to=\"/\">kandidat</Link></Navbar>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n                <Nav className=\"ml-auto theLinks\">\n                    <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                    <Nav.Link as=\"li\"><Link to=\"/signup\">Registro</Link></Nav.Link>\n                    <Nav.Link as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        )\n    }\n}\n\nexport default Navigation","import React, { Component } from 'react'\nimport { Button, Form, Container } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass SignupForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = { \n            username: '', \n            password: '',\n            showPassword: false,\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state\n        this._service.signup(username, password)\n            .then(theNewUser => {\n                this.props.setUser(theNewUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push(`/dashboard`)            // REDIRECCIONAMIENTO\n                // this.props.history.push(`/dashboard/${theNewUser.data._id}`)            // REDIRECCIONAMIENTO\n            })\n            .catch(err => console.log(err.response.data.message))\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleCheckboxChange = () => this.setState({ showPassword: !this.state.showPassword })\n\n\n    render() {\n\n        let inputType\n\n        if(this.state.showPassword) {\n        \n            inputType = \n            \n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        } else {\n\n            inputType = \n\n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        }\n\n\n        return (\n            <Container>\n\n                <h1>Registro</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    \n                    {inputType}\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check onChange={this.handleCheckboxChange} type=\"checkbox\" label=\"Ver contraseña\" />\n                    </Form.Group>\n\n\n                    <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default SignupForm","import React, { Component } from 'react'\nimport { Button, Form, Container, Toast } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showToast: false,\n            toastText: '',\n            user: { username: '', \n            password: '',\n            showPassword: false,\n            }\n        }\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state.user\n        this._service.login(username, password)\n            .then(theLoggedUser => {\n                this.props.setUser(theLoggedUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push(`/dashboard`)  \n                // this.props.history.push(`/dashboard/${theLoggedUser.data._id}`)            // REDIRECCIONAMIENTO\n            })\n            .catch(err => {\n                this.handleToastOpen(err.response.data.message)\n            })\n    }\n\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\n\n    handleCheckboxChange = () => this.setState({ showPassword: !this.state.showPassword })\n    \n    render() {\n\n        let inputType\n\n        if(this.state.showPassword) {\n        \n            inputType = \n            \n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        } else {\n\n            inputType = \n\n            <Form.Group>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n            </Form.Group>\n        }\n\n        return (\n            <Container>\n\n                <h1>Iniciar sesión</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    {inputType}\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check onChange={this.handleCheckboxChange} type=\"checkbox\" label=\"Ver contraseña\" />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                </Form>\n\n                <Toast\n                    onClose={this.handleToastClose}\n                    show={this.state.showToast}\n                    delay={3000}\n                    autohide\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '10px',\n                        minWidth: '250px'\n                    }}>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Error</strong>\n                        <small>Gestor de sesiones</small>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toastText}</Toast.Body>\n                </Toast>\n\n            </Container >\n        )\n    }\n}\n\n\nexport default LoginForm","import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Service from './service/Auth.service'\n\n\n/* ---------  PAGE COMPONENTS --------- */\n\nimport Index from './components/pages/Index'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Company from './components/company/Company'\nimport Mail from './components/mails/Mails'\nimport Agenda from './components/agenda/Agenda'\nimport ApplicationDetails from './components/applications/Application-details'\nimport InterviewForm from './components/agenda/Interview-form'\n\n\n\n/* ---------  UI COMPONENTS --------- */\n\nimport Navbar from './components/ui/Navbar'\nimport CookieConsent from \"react-cookie-consent\";\n\n\n\n/* ---------  AUTH COMPONENTS --------- */\n\nimport Signup from './components/auth/Signup'\nimport Login from './components/auth/Login'\n\n\nimport './App.css'\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this._service = new Service()\n  }\n\n  componentDidMount = () => console.log(this.state.loggedInUser)\n\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user })\n    console.log(\"El método 'setTheUser' de App.js se ha invocado, pasando al estado 'loggedInUser:\", this.state.loggedInUser)\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this._service.loggedin()\n        .then(theLoggedInUserFromTheServer => {\n          console.log(`holaaaaaaaaaaaaaaa ${theLoggedInUserFromTheServer.data} ` )\n         this.setState({ loggedInUser: theLoggedInUserFromTheServer.data })})\n        \n         .catch(err => {\n          this.setState({ loggedInUser: false })\n          console.log({ err })\n        })\n    }\n  }\n\n  render() {\n\n    this.fetchUser()\n\n    let acceptButton = {\n      background: \"#CACAEA\",\n      cursor: \"pointer\",\n      }\n \n    return (\n      <>\n        <Navbar loggedInUser={this.state.loggedInUser} setUser={this.setTheUser} /*idUser={this.state.loggedInUser.data._id}*/ />\n\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n          <Route path=\"/company\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <Company loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n          <Route path=\"/mail\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <Mail loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/agenda\" render={match => \n            this.state.loggedInUser == null ? \n            <Redirect to=\"/agenda\"/> \n            : this.state.loggedInUser ?\n               <Agenda loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> \n               : <Redirect to=\"/\"/>}\n            />\n\n\n          <Route path=\"/application/:id\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <ApplicationDetails loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/newInterview\" render={match => \n          this.state.loggedInUser || this.state.loggedInUser === null ? <InterviewForm loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> : <Redirect to=\"/\"/>}\n            />\n\n          <Route exact path=\"/dashboard\" render={match => \n            this.state.loggedInUser == null ? \n            <Redirect to=\"/dashboard\"/> \n            : this.state.loggedInUser ?\n               <Dashboard loggedInUser={this.state.loggedInUser || {}} setUser={this.setTheUser} {...match}/> \n               : <Redirect to=\"/\"/>}\n            />\n\n          <Route path=\"/signup\" render={match => <Signup setUser={this.setTheUser} {...match} />} />\n          <Route path=\"/login\" render={match => <Login setUser={this.setTheUser} {...match} />} />\n\n\n          </Switch>\n\n          <CookieConsent location=\"bottom\"\n          background=\"black\"\n            buttonText=\"Aceptar\"\n            cookieName=\"thisIsTheCookieName\"\n            style={{ background: '#EE4266', fontSize: \"13px\" }}\n            buttonStyle={{color: \"#4e503b\", fontSize: \"13px\" }}\n            expires={30} \n            debug={true}\n            containerClasses=\"alert-warning\"\n            acceptOnScroll={true}\n            acceptOnScrollPercentage={50}\n            >\n              KANDIDAT utilizaría este apartado para informarte del uso de cookies.\n\n          </CookieConsent>\n\n      </>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister()\n"],"sourceRoot":""}